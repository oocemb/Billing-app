services:
  front_app:
    build: django_app
    restart: always
    container_name: front_app
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - ./django_app/.env
    volumes:
      - django_static_volume:/home/app/web/staticfiles
      - django_media_volume:/home/app/web/mediafiles
    depends_on:
      - front_db
      - redis
    networks:
      - api

  billing_api:
    build: billing_api
    restart: always
    container_name: async_api
    entrypoint: ["gunicorn", "main:app", "--workers", "4", "--worker-class",
                 "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:5000", "--reload"]
    env_file:
      - billing_api_old/src/core/.env
    depends_on:
      - billing_db
      - redis
    networks:
      - api

  billing_db:
    image: postgres:13-alpine3.16
    restart: always
    container_name: billing_db
    env_file:
      - billing_db/.env
    volumes:
      - ./billing_db/init_data/:/docker-entrypoint-initdb.d/
      - ./billing_db/data:/var/lib/postgresql/data/
    networks:
      - api
    healthcheck:
      test: [ "CMD-SHELL", "su postgres", "&&", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6.2.6
    restart: always
    container_name: redis_cashe
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - api
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50

  celery-worker:
    build: celery
    command: celery worker --app=worker.celery --loglevel=info
    networks:
      - api
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  celery-beat:
    build: celery
    command: celery -A worker.celery beat -l info
    networks:
      - api
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  dashboard-flower-celery:
    build: celery
    command: flower --app=worker.celery --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    networks:
      - api
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery-worker

  nginx:
    image: nginx:1.22.1
    restart: always
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "8000:80"
    networks:
      - api
    depends_on:
      - billing_api

volumes:
    django_static_volume:
    django_media_volume:
    cache:
      driver: local

networks:
  api:
    driver: bridge